{
	"id": "9ac62538-7225-598b-9d41-7f2813379977",
	"name": "RabbitMQ Management",
	"description": "Based on this documentation:\n\nhttps://raw.githack.com/rabbitmq/rabbitmq-management/rabbitmq_v3_6_1/priv/www/api/index.html\n\n\nhttps://bunny.cloudamqp.com/api/index.html",
	"order": [
		"8ca26e25-0702-3f60-ecc9-a4d22f9ad3ad",
		"837786c3-ada1-86fd-b5ae-66ac793992bc",
		"022e1839-b7da-8179-7c03-c258993993a6",
		"83584709-1ea8-932c-9c39-2e0300652f97",
		"842ffa74-4146-08e8-e19f-64508cf90db2",
		"1a1e6d34-cda6-338d-de13-bf610d460c34",
		"84248844-a891-fefe-364f-ab1dc437b966",
		"e5d660ef-f75e-daf1-5aaf-3b4f7184c071",
		"378b7a07-3076-30f8-5173-3f0f7bbc4fbb",
		"9fe97db7-9bd0-b6f5-6547-fddb2435a21f",
		"19a78cd3-a686-200a-7d22-59d7b00b0f07",
		"4f1f6097-4447-5d37-c939-cd495a0e55fc",
		"94588485-8795-9cdc-ce1e-922df009fe1b",
		"8c7134ce-3a6f-c2a5-d384-67bb7645d455",
		"60451677-3554-f530-e966-94645dd3e36c",
		"73d11116-5b4a-e6b0-c0d3-4c683669d888",
		"14b6e232-5cd9-d5b5-9191-5acb8183ed6f",
		"ef6b0f52-5efb-74ed-0526-ba04364507bd"
	],
	"folders": [
		{
			"id": "c0e954ed-81c4-5f01-059f-b36cb16b562b",
			"name": "Channels",
			"description": "",
			"order": [
				"e4d142e3-828d-048c-183f-68a2fbb87c3e",
				"a7c1ab78-d0a0-7af9-6bbb-4b18dc4f7448",
				"1e50c1ab-13ea-46fa-c2bb-55e7a63d6cf5",
				"1bb22d91-d9a0-bac9-4665-a34fd4c6fbf9"
			],
			"owner": "1443154",
			"collectionId": "9ac62538-7225-598b-9d41-7f2813379977",
			"folders_order": []
		},
		{
			"id": "2a957492-2558-2c44-531c-52e8b6e9fffd",
			"name": "Connections",
			"description": "",
			"order": [
				"673a5c15-4743-9c5a-686e-41eec924b0a6",
				"a1dca2f9-19eb-cb58-4700-d31428634bf6",
				"24450392-2593-585c-8cbe-b32f4f55189f",
				"34437dbd-9480-c346-2343-17c03c69c77a"
			],
			"owner": "1443154",
			"collectionId": "9ac62538-7225-598b-9d41-7f2813379977",
			"folders_order": []
		},
		{
			"id": "eda5579c-21f0-86b6-6f3e-0e7f976e2253",
			"name": "Exchanges",
			"description": "",
			"order": [
				"29687276-28aa-50ff-327c-8a4074e3aaf5",
				"1e394c95-9413-63d0-4eda-07ee6b57945c",
				"5016e4f4-0c33-6e09-25fd-5303536010de",
				"e7a04749-87bb-9852-f5b4-917f1a53bfd3",
				"6428f018-b9b4-cc28-b750-4a85ff7e2b49",
				"c3c382f3-806b-b25d-8a15-553239b61094",
				"01774171-6a0d-3838-e8a2-1ddf5d26270f"
			],
			"owner": "1443154",
			"collectionId": "9ac62538-7225-598b-9d41-7f2813379977",
			"folders_order": []
		},
		{
			"id": "ed6c2b55-13f3-61d9-846f-6acbd456d71e",
			"name": "Policies",
			"description": "",
			"order": [
				"6d9ec10a-062b-2b18-443f-00de172ff8b3",
				"8256812d-f3a7-4745-777c-d0641032d7e5",
				"8c2c6be2-3ef9-a0fe-9eb9-cf3f9f0cf226",
				"d44047ad-f969-833d-957f-76d4c471fc0c",
				"6717b6c2-5c47-20c8-bf3c-35f91bc51c42"
			],
			"owner": "1443154",
			"collectionId": "9ac62538-7225-598b-9d41-7f2813379977",
			"folders_order": []
		},
		{
			"id": "08024882-01b1-67ed-e249-9a49c714657f",
			"name": "Queues",
			"description": "",
			"order": [
				"c2a30aac-1489-8463-fc79-555d710e8f3b",
				"242844ad-82ea-7722-f611-d947e0c864c2",
				"7e2d5f86-64b7-603e-d497-ff5f8bd97e61",
				"f243f814-418e-a805-80e9-8fc3f869cd8d",
				"45ef5df5-66aa-6859-ea95-095c6ed13c40",
				"cfac2183-267b-c85c-27d3-f1fb138182f0",
				"a08f0f10-fc67-c54e-8e56-aeb411ca6ead",
				"157bf793-f4b3-d9ca-a71d-52ec62c8be81",
				"4254bcf1-79a5-611a-666c-4e0eaca2a7bf"
			],
			"owner": "1443154",
			"collectionId": "9ac62538-7225-598b-9d41-7f2813379977",
			"folders_order": []
		},
		{
			"id": "5526891f-b70b-0d81-10c4-f01530d1fd34",
			"name": "Server/vhost",
			"description": "",
			"order": [
				"fe6e697c-8e0d-159d-f99f-77f8be4fc5fe",
				"4ec73aa9-34b4-7cfe-91f3-4ad1d3e2e335",
				"c571eabd-6c4f-e41d-b46c-a64dc43ccadd",
				"3539c9ad-8848-ade2-44cb-76b3d4d5f578",
				"7cea4c1a-3223-f389-141e-2ed43b5db580",
				"31fb29f9-1048-2c50-1494-018635cc5c4b",
				"7bfeb470-d93b-7ff8-8365-71c897011553",
				"220550ba-0db6-1e89-854b-f7b5610c8681",
				"5d64a7db-d440-d284-b80f-c87a7d9b219a",
				"404c2974-bdb3-1469-f6d5-2bae9c4c53c0",
				"22bf3cf0-a9dc-228f-5c0d-abe4fac6082a",
				"faee8e98-e068-1a05-e4d1-183b3e9679f7",
				"2a45284c-5ba5-0e80-1ae1-b04db3152919",
				"15d8b771-c3e2-7908-01db-6ca73d89adc2",
				"7c70aaee-6891-d855-5533-14a0c3615fc3",
				"8f8c2780-b9bf-9cc3-95aa-ea5482e786c3",
				"2bcda7bb-75fa-d4d4-eb8a-239486253f55"
			],
			"owner": "1443154",
			"collectionId": "9ac62538-7225-598b-9d41-7f2813379977",
			"folders_order": []
		},
		{
			"id": "7636f54a-6952-d1f6-42dc-5a9d07b89da0",
			"name": "Users",
			"description": "",
			"order": [
				"eb181808-12a7-0976-0d60-b1df5be05c29",
				"bc739a79-3fd8-a077-495c-f85e5dd14ba5",
				"94ba05a7-0721-f046-0db2-e8d2e090e063",
				"0cd9ea3e-487d-b89e-fa90-09d14c486922",
				"1b97e4c8-b296-816b-3dfb-13c11f5faff6",
				"b1ad076d-7474-c440-4f15-349c7d266e2b",
				"fa0557b8-99c2-4b95-849d-4eb20c38892c",
				"7257df87-cbf4-efed-2a52-31005b1cf595",
				"4211072f-94ac-c8b7-cda9-b2b81a465093",
				"75f36c44-9681-815c-5c6f-67dde699d20d"
			],
			"owner": "1443154",
			"collectionId": "9ac62538-7225-598b-9d41-7f2813379977",
			"folders_order": []
		}
	],
	"folders_order": [
		"c0e954ed-81c4-5f01-059f-b36cb16b562b",
		"2a957492-2558-2c44-531c-52e8b6e9fffd",
		"eda5579c-21f0-86b6-6f3e-0e7f976e2253",
		"ed6c2b55-13f3-61d9-846f-6acbd456d71e",
		"08024882-01b1-67ed-e249-9a49c714657f",
		"5526891f-b70b-0d81-10c4-f01530d1fd34",
		"7636f54a-6952-d1f6-42dc-5a9d07b89da0"
	],
	"timestamp": 1457222676727,
	"owner": "1443154",
	"public": false,
	"requests": [
		{
			"id": "01774171-6a0d-3838-e8a2-1ddf5d26270f",
			"headers": "Authorization: {{auth}}\n",
			"url": "{{host}}/api/exchanges/%2f/amq.direct/bindings/destination",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457641123766,
			"name": "List All Bindings in exchange is destination",
			"description": "A list of all bindings in which a given exchange is the source.",
			"collectionId": "9ac62538-7225-598b-9d41-7f2813379977",
			"responses": [],
			"folder": "eda5579c-21f0-86b6-6f3e-0e7f976e2253",
			"collection_id": "9ac62538-7225-598b-9d41-7f2813379977"
		},
		{
			"id": "022e1839-b7da-8179-7c03-c258993993a6",
			"headers": "Authorization: {{auth}}\nContent-Type: application/json\n",
			"url": "{{host}}/api/exchanges/%2f/amq.direct/publish",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457727309641,
			"name": "Publish Message to Exchange",
			"description": "Publish a message to a given exchange. You will need a body looking something like:\n\n<blockquote>\n{<br>\n\"properties\":{},<br>\n\"routing_key\":\"my key\",<br>\n\"payload\":\"my body\",<br>\n\"payload_encoding\":\"string\"<br>\n}\n</blockquote>\n\nAll keys are mandatory. The payload_encoding key should be either \"string\" (in which case the payload will be taken to be the UTF-8 encoding of the payload field) or \"base64\" (in which case the payload field is taken to be base64 encoded).\nIf the message is published successfully, the response will look like:\n\n<blockquote>\n{\"routed\": true}\n</blockquote>\n\nrouted will be true if the message was sent to at least one queue.\nPlease note that the HTTP API is not ideal for high performance publishing; the need to create a new TCP connection for each message published can limit message throughput compared to AMQP or other protocols using long-lived connections.",
			"collectionId": "9ac62538-7225-598b-9d41-7f2813379977",
			"responses": [],
			"rawModeData": " {\n\"properties\":{},\n\"routing_key\":\"my key\",\n\"payload\":\"my body\",\n\"payload_encoding\":\"string\"\n}",
			"collection_id": "9ac62538-7225-598b-9d41-7f2813379977"
		},
		{
			"id": "0cd9ea3e-487d-b89e-fa90-09d14c486922",
			"headers": "Authorization: {{auth}}\nContent-Type: application/json\n",
			"url": "{{host}}/api/permissions/vhost/user",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457641393712,
			"name": "Create user permission/vhost",
			"description": "Create a permission, you will need a body looking something like this:\n\n<blockquote>\n{<br>\n\"configure\":\".*\",<br>\n\"write\":\".*\",<br>\n\"read\":\".*\"<br>\n}\n</blockquote>\n\nAll keys are mandatory.",
			"collectionId": "9ac62538-7225-598b-9d41-7f2813379977",
			"responses": [],
			"folder": "7636f54a-6952-d1f6-42dc-5a9d07b89da0",
			"rawModeData": "{\n\"configure\":\".\",\n\"write\":\".\",\n\"read\":\".*\"\n}",
			"collection_id": "9ac62538-7225-598b-9d41-7f2813379977"
		},
		{
			"id": "14b6e232-5cd9-d5b5-9191-5acb8183ed6f",
			"headers": "Authorization: {{auth}}\n",
			"url": "{{host}}/api/parameters/component/vhost/name",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457641416451,
			"name": "Get an individual parameter",
			"description": "Get an individual parameter",
			"collectionId": "9ac62538-7225-598b-9d41-7f2813379977",
			"responses": [],
			"collection_id": "9ac62538-7225-598b-9d41-7f2813379977"
		},
		{
			"id": "157bf793-f4b3-d9ca-a71d-52ec62c8be81",
			"headers": "Authorization: {{auth}}\nContent-Type: application/json\n",
			"url": "{{host}}/api/queues/%2f/queue-name/actions",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457641249124,
			"name": "Perform action on queue",
			"description": "Actions that can be taken on a queue. POST a body like:\n\n<blockquote>\n{\"action\":\"sync\"}\n</blockquote>\n\nCurrently the actions which are supported are <strong>sync</strong> and <strong>cancel_sync</strong>.",
			"collectionId": "9ac62538-7225-598b-9d41-7f2813379977",
			"responses": [],
			"folder": "08024882-01b1-67ed-e249-9a49c714657f",
			"rawModeData": "{\n\"action\": \"sync\"\n}",
			"collection_id": "9ac62538-7225-598b-9d41-7f2813379977"
		},
		{
			"id": "15d8b771-c3e2-7908-01db-6ca73d89adc2",
			"headers": "Authorization: {{auth}}\n",
			"url": "{{host}}/api/vhosts/%2f",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457641318965,
			"name": "Get vhost by Name",
			"description": "Get an individual virtual host.",
			"collectionId": "9ac62538-7225-598b-9d41-7f2813379977",
			"responses": [],
			"folder": "5526891f-b70b-0d81-10c4-f01530d1fd34",
			"collection_id": "9ac62538-7225-598b-9d41-7f2813379977"
		},
		{
			"id": "19a78cd3-a686-200a-7d22-59d7b00b0f07",
			"headers": "Authorization: {{auth}}\nContent-Type: application/json\n",
			"url": "{{host}}/api/bindings/vhost/e/source/e/destination",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457641297236,
			"name": "/api/bindings/vhost/e/source/e/destination",
			"description": "Post individual binding between an exchange and a queue. \n\nThe props part of the URI is a \"name\" for the binding composed of its routing key and a hash of its arguments.",
			"collectionId": "9ac62538-7225-598b-9d41-7f2813379977",
			"responses": [],
			"collection_id": "9ac62538-7225-598b-9d41-7f2813379977"
		},
		{
			"id": "1a1e6d34-cda6-338d-de13-bf610d460c34",
			"headers": "Authorization: {{auth}}\n",
			"url": "{{host}}/api/bindings/vhost/e/exchange/q/queue",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457641270535,
			"name": "List Exchange/Queue Binding",
			"description": "A list of all bindings between an exchange and a queue. Remember, an exchange and a queue can be bound together many times!",
			"collectionId": "9ac62538-7225-598b-9d41-7f2813379977",
			"responses": [],
			"collection_id": "9ac62538-7225-598b-9d41-7f2813379977"
		},
		{
			"id": "1b97e4c8-b296-816b-3dfb-13c11f5faff6",
			"headers": "Authorization: {{auth}}\n",
			"url": "{{host}}/api/whoami",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457641367995,
			"name": "Logged In User Info",
			"description": "Details of the currently authenticated user.",
			"collectionId": "9ac62538-7225-598b-9d41-7f2813379977",
			"responses": [],
			"folder": "7636f54a-6952-d1f6-42dc-5a9d07b89da0",
			"collection_id": "9ac62538-7225-598b-9d41-7f2813379977"
		},
		{
			"id": "1bb22d91-d9a0-bac9-4665-a34fd4c6fbf9",
			"headers": "Authorization: {{auth}}\n",
			"url": "{{host}}/api/vhosts/%2f/channels",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457641056811,
			"name": "List All Open Channels on vhost",
			"description": "A list of all open channels in a specific vhost.",
			"collectionId": "9ac62538-7225-598b-9d41-7f2813379977",
			"responses": [],
			"folder": "c0e954ed-81c4-5f01-059f-b36cb16b562b",
			"collection_id": "9ac62538-7225-598b-9d41-7f2813379977"
		},
		{
			"id": "1e394c95-9413-63d0-4eda-07ee6b57945c",
			"headers": "Authorization: {{auth}}\n",
			"url": "{{host}}/api/exchanges/%2f/amq.direct",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457641102013,
			"name": "Get Exchange on vhost",
			"description": "Get individual exchange on vhost by name",
			"collectionId": "9ac62538-7225-598b-9d41-7f2813379977",
			"responses": [],
			"folder": "eda5579c-21f0-86b6-6f3e-0e7f976e2253",
			"collection_id": "9ac62538-7225-598b-9d41-7f2813379977"
		},
		{
			"id": "1e50c1ab-13ea-46fa-c2bb-55e7a63d6cf5",
			"headers": "Authorization: {{auth}}\n",
			"url": "{{host}}/api/channels",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457641050462,
			"name": "List All Open Channels",
			"description": "A list of all open channels.",
			"collectionId": "9ac62538-7225-598b-9d41-7f2813379977",
			"responses": [],
			"folder": "c0e954ed-81c4-5f01-059f-b36cb16b562b",
			"collection_id": "9ac62538-7225-598b-9d41-7f2813379977"
		},
		{
			"id": "220550ba-0db6-1e89-854b-f7b5610c8681",
			"headers": "Authorization: {{auth}}\n",
			"url": "{{host}}/api/definitions",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457639433906,
			"name": "Set Server Definitions",
			"description": "Set the server definitions - exchanges, queues, bindings, users, virtual hosts, permissions and parameters. Everything apart from messages. Upload an existing set of definitions. Note that:\n\n<ul>\n<li>The definitions are merged. Anything already existing on the server but not in the uploaded definitions is untouched.</li>\n<li>Conflicting definitions on immutable objects (exchanges, queues and bindings) will cause an error.</li>\n<li>Conflicting definitions on mutable objects will cause the object in the server to be overwritten with the object from the definitions.</li>\n<li>In the event of an error you will be left with a part-applied set of definitions.</li>\n</ul>\n\nFor convenience you may upload a file from a browser to this URI (i.e. you can use multipart/form-data as well as application/json) in which case the definitions should be uploaded as a form field named \"file\".",
			"collectionId": "9ac62538-7225-598b-9d41-7f2813379977",
			"responses": [],
			"folder": "5526891f-b70b-0d81-10c4-f01530d1fd34",
			"collection_id": "9ac62538-7225-598b-9d41-7f2813379977"
		},
		{
			"id": "22bf3cf0-a9dc-228f-5c0d-abe4fac6082a",
			"headers": "Authorization: {{auth}}\nContent-Type: application/json\n",
			"url": "{{host}}/api/parameters/component/vhost/name",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457641421164,
			"name": "Create parameter on vhost",
			"description": "Create an individual parameter. To create a parameter, you will need a body looking something like this:\n\n<blockquote>\n{<br>\n\"vhost\": \"/\",<br>\n\"component\":\"federation\",<br>\n\"name\":\"local_username\",<br>\n\"value\":\"guest\"<br>\n}\n</blockquote>",
			"collectionId": "9ac62538-7225-598b-9d41-7f2813379977",
			"responses": [],
			"folder": "5526891f-b70b-0d81-10c4-f01530d1fd34",
			"rawModeData": " {\n\"vhost\": \"/\",\n\"component\":\"federation\",\n\"name\":\"local_username\",\n\"value\":\"guest\"\n}",
			"collection_id": "9ac62538-7225-598b-9d41-7f2813379977"
		},
		{
			"id": "242844ad-82ea-7722-f611-d947e0c864c2",
			"headers": "Authorization: {{auth}}\n",
			"url": "{{host}}/api/queues/%2f",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457641148351,
			"name": "Get vhost Queues",
			"description": "A list of all queues in a given virtual host.",
			"collectionId": "9ac62538-7225-598b-9d41-7f2813379977",
			"responses": [],
			"folder": "08024882-01b1-67ed-e249-9a49c714657f",
			"collection_id": "9ac62538-7225-598b-9d41-7f2813379977"
		},
		{
			"id": "24450392-2593-585c-8cbe-b32f4f55189f",
			"headers": "Authorization: {{auth}}\n",
			"url": "{{host}}/api/connections",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457639519435,
			"name": "Open Connections",
			"description": "A list of all open connections.",
			"collectionId": "9ac62538-7225-598b-9d41-7f2813379977",
			"responses": [],
			"folder": "2a957492-2558-2c44-531c-52e8b6e9fffd",
			"collection_id": "9ac62538-7225-598b-9d41-7f2813379977"
		},
		{
			"id": "29687276-28aa-50ff-327c-8a4074e3aaf5",
			"headers": "Authorization: {{auth}}\n",
			"url": "{{host}}/api/exchanges/%2f",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457641096850,
			"name": "List Exchanges on vhost",
			"description": "A list of all exchanges on vhost.",
			"collectionId": "9ac62538-7225-598b-9d41-7f2813379977",
			"responses": [],
			"folder": "eda5579c-21f0-86b6-6f3e-0e7f976e2253",
			"collection_id": "9ac62538-7225-598b-9d41-7f2813379977"
		},
		{
			"id": "2a45284c-5ba5-0e80-1ae1-b04db3152919",
			"headers": "Authorization: {{auth}}\nContent-Type: application/json\n",
			"url": "{{host}}/api/vhosts/blah",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457641323307,
			"name": "Create vhost",
			"description": "Create an individual virtual host. As a virtual host usually only has a name, you do not need an HTTP body. To enable / disable tracing, provide a body looking like:\n\n<blockquote>\n{\"tracing\":true}\n</blockquote>",
			"collectionId": "9ac62538-7225-598b-9d41-7f2813379977",
			"responses": [],
			"folder": "5526891f-b70b-0d81-10c4-f01530d1fd34",
			"rawModeData": "{\"tracing\":true}",
			"collection_id": "9ac62538-7225-598b-9d41-7f2813379977"
		},
		{
			"id": "2bcda7bb-75fa-d4d4-eb8a-239486253f55",
			"headers": "Authorization: {{auth}}\n",
			"url": "{{host}}/api/vhosts/%2f/permissions",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457641332994,
			"name": "Get List of vhost permissions",
			"description": "A list of all permissions for a given virtual host.",
			"collectionId": "9ac62538-7225-598b-9d41-7f2813379977",
			"responses": [],
			"folder": "5526891f-b70b-0d81-10c4-f01530d1fd34",
			"collection_id": "9ac62538-7225-598b-9d41-7f2813379977"
		},
		{
			"id": "31fb29f9-1048-2c50-1494-018635cc5c4b",
			"headers": "Authorization: {{auth}}\n",
			"url": "{{host}}/api/extensions",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457639420195,
			"name": "Get Management Plugin Extensions",
			"description": "A list of extensions to the management plugin.",
			"collectionId": "9ac62538-7225-598b-9d41-7f2813379977",
			"responses": [],
			"folder": "5526891f-b70b-0d81-10c4-f01530d1fd34",
			"collection_id": "9ac62538-7225-598b-9d41-7f2813379977"
		},
		{
			"id": "34437dbd-9480-c346-2343-17c03c69c77a",
			"headers": "Authorization: {{auth}}\n",
			"url": "{{host}}/api/connections/name",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457640155480,
			"name": "Close Individual connection",
			"description": "Close the connection. Optionally set the \"X-Reason\" header when DELETEing to provide a reason.",
			"collectionId": "9ac62538-7225-598b-9d41-7f2813379977",
			"responses": [],
			"folder": "2a957492-2558-2c44-531c-52e8b6e9fffd",
			"collection_id": "9ac62538-7225-598b-9d41-7f2813379977"
		},
		{
			"id": "3539c9ad-8848-ade2-44cb-76b3d4d5f578",
			"headers": "Authorization: {{auth}}\n",
			"url": "{{host}}/api/nodes",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457639405498,
			"name": "Get All Nodes",
			"description": "A list of nodes in the RabbitMQ cluster.",
			"collectionId": "9ac62538-7225-598b-9d41-7f2813379977",
			"responses": [],
			"folder": "5526891f-b70b-0d81-10c4-f01530d1fd34",
			"collection_id": "9ac62538-7225-598b-9d41-7f2813379977"
		},
		{
			"id": "378b7a07-3076-30f8-5173-3f0f7bbc4fbb",
			"headers": "Authorization: {{auth}}\n",
			"url": "{{host}}/api/bindings/vhost/e/exchange/q/queue/props",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457641286656,
			"name": "Delete individual exchange/queue binding",
			"description": "An individual binding between an exchange and a queue. The props part of the URI is a \"name\" for the binding composed of its routing key and a hash of its arguments.",
			"collectionId": "9ac62538-7225-598b-9d41-7f2813379977",
			"responses": [],
			"collection_id": "9ac62538-7225-598b-9d41-7f2813379977"
		},
		{
			"id": "404c2974-bdb3-1469-f6d5-2bae9c4c53c0",
			"headers": "Authorization: {{auth}}\nContent-Type: application/json\n",
			"url": "{{host}}/api/definitions/vhost",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457639448567,
			"name": "Set vhost Definition",
			"description": "Set the server definitions for a given virtual host - exchanges, queues, bindings and policies. Note that:\n\n<ul>\n<li>The definitions are merged. Anything already existing on the server but not in the uploaded definitions is untouched.</li>\n<li>Conflicting definitions on immutable objects (exchanges, queues and bindings) will cause an error.</li>\n<li>Conflicting definitions on mutable objects will cause the object in the server to be overwritten with the object from the definitions.</li>\n<li>In the event of an error you will be left with a part-applied set of definitions.</li>\n</ul>\n\nFor convenience you may upload a file from a browser to this URI (i.e. you can use multipart/form-data as well as application/json) in which case the definitions should be uploaded as a form field named \"file\".",
			"collectionId": "9ac62538-7225-598b-9d41-7f2813379977",
			"responses": [],
			"folder": "5526891f-b70b-0d81-10c4-f01530d1fd34",
			"collection_id": "9ac62538-7225-598b-9d41-7f2813379977"
		},
		{
			"id": "4211072f-94ac-c8b7-cda9-b2b81a465093",
			"headers": "Authorization: {{auth}}\n",
			"url": "{{host}}/api/users/name",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457641346286,
			"name": "Get user by name",
			"description": "Get an individual user.",
			"collectionId": "9ac62538-7225-598b-9d41-7f2813379977",
			"responses": [],
			"folder": "7636f54a-6952-d1f6-42dc-5a9d07b89da0",
			"collection_id": "9ac62538-7225-598b-9d41-7f2813379977"
		},
		{
			"id": "4254bcf1-79a5-611a-666c-4e0eaca2a7bf",
			"headers": "Authorization: {{auth}}\nContent-Type: application/json\n",
			"headerData": [
				{
					"key": "Authorization",
					"value": "{{auth}}",
					"description": "",
					"enabled": true
				},
				{
					"key": "Content-Type",
					"value": "application/json",
					"description": "",
					"enabled": true
				}
			],
			"url": "{{host}}/api/queues/%2f/notification/get",
			"folder": "08024882-01b1-67ed-e249-9a49c714657f",
			"queryParams": [],
			"preRequestScript": "",
			"pathVariables": {},
			"pathVariableData": [],
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1587260130556,
			"name": "Get message from queue",
			"description": "Get messages from a queue. (This is not an HTTP GET as it will alter the state of the queue.) You should post a body looking like:\n\n<blockquote>\n{<br>\n\"count\":5,<br>\n\"requeue\":true,<br>\n\"encoding\":\"auto\",<br>\n\"truncate\":50000<br>\n}\n</blockquote>\n\n<ul>\n<li>count controls the maximum number of messages to get. You may get fewer messages than this if the queue cannot immediately provide them.</li>\n<li>requeue determines whether the messages will be removed from the queue. If requeue is true they will be requeued - but their redelivered flag will be set.</li>\n<li>encoding must be either \"auto\" (in which case the payload will be returned as a string if it is valid UTF-8, and base64 encoded otherwise), or \"base64\" (in which case the payload will always be base64 encoded).</li>\n<li>If truncate is present it will truncate the message payload if it is larger than the size given (in bytes).</li>\n</ul>\n\ntruncate is optional; all other keys are mandatory.\n\nPlease note that the get path in the HTTP API is intended for diagnostics etc - it does not implement reliable delivery and so should be treated as a sysadmin's tool rather than a general API for messaging.",
			"collectionId": "9ac62538-7225-598b-9d41-7f2813379977",
			"responses": [],
			"rawModeData": " {\n\"count\":1,\n\"requeue\":true,\n\"encoding\":\"auto\",\n\"truncate\":50000,\n\"ackmode\":\"ack_requeue_true\"\n}"
		},
		{
			"id": "45ef5df5-66aa-6859-ea95-095c6ed13c40",
			"headers": "Authorization: {{auth}}\n",
			"url": "{{host}}/api/queues/%2f/queue-name",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457641234445,
			"name": "Delete a Queue",
			"description": "When deleteing a queue you can add the query string parameters \n\nQuery Parameters<br>\n<strong>if-empty=true</strong><br> \n<strong>if-unused=true</strong>\n\nThese prevent the delete from succeeding if the queue contains messages, or has consumers, respectively.",
			"collectionId": "9ac62538-7225-598b-9d41-7f2813379977",
			"responses": [],
			"folder": "08024882-01b1-67ed-e249-9a49c714657f",
			"collection_id": "9ac62538-7225-598b-9d41-7f2813379977"
		},
		{
			"id": "4ec73aa9-34b4-7cfe-91f3-4ad1d3e2e335",
			"headers": "Authorization: {{auth}}\n",
			"url": "{{host}}/api/cluster-name",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457639389736,
			"name": "Get Cluster Name",
			"description": "Name identifying this RabbitMQ cluster.",
			"collectionId": "9ac62538-7225-598b-9d41-7f2813379977",
			"responses": [],
			"folder": "5526891f-b70b-0d81-10c4-f01530d1fd34",
			"collection_id": "9ac62538-7225-598b-9d41-7f2813379977"
		},
		{
			"id": "4f1f6097-4447-5d37-c939-cd495a0e55fc",
			"headers": "Authorization: {{auth}}\n",
			"url": "{{host}}/api/bindings/vhost/e/source/e/destination/props",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457641302201,
			"name": "/api/bindings/vhost/e/source/e/destination/props",
			"description": "A list of all bindings between two exchanges. Similar to the list of all bindings between an exchange and a queue, above.",
			"collectionId": "9ac62538-7225-598b-9d41-7f2813379977",
			"responses": [],
			"collection_id": "9ac62538-7225-598b-9d41-7f2813379977"
		},
		{
			"id": "5016e4f4-0c33-6e09-25fd-5303536010de",
			"headers": "Authorization: {{auth}}\n",
			"url": "{{host}}/api/exchanges",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457641092273,
			"name": "List Exchanges",
			"description": "A list of all exchanges.",
			"collectionId": "9ac62538-7225-598b-9d41-7f2813379977",
			"responses": [],
			"folder": "eda5579c-21f0-86b6-6f3e-0e7f976e2253",
			"collection_id": "9ac62538-7225-598b-9d41-7f2813379977"
		},
		{
			"id": "5d64a7db-d440-d284-b80f-c87a7d9b219a",
			"headers": "Authorization: {{auth}}\n",
			"url": "{{host}}/api/definitions/vhost",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457639440769,
			"name": "Get vhost Definition",
			"description": "The server definitions for a given virtual host.",
			"collectionId": "9ac62538-7225-598b-9d41-7f2813379977",
			"responses": [],
			"folder": "5526891f-b70b-0d81-10c4-f01530d1fd34",
			"collection_id": "9ac62538-7225-598b-9d41-7f2813379977"
		},
		{
			"id": "60451677-3554-f530-e966-94645dd3e36c",
			"headers": "Authorization: {{auth}}\n",
			"url": "{{host}}/api/parameters/component",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457641407380,
			"name": "List of all parameter/component",
			"description": "A list of all parameters for a given component.",
			"collectionId": "9ac62538-7225-598b-9d41-7f2813379977",
			"responses": [],
			"collection_id": "9ac62538-7225-598b-9d41-7f2813379977"
		},
		{
			"id": "6428f018-b9b4-cc28-b750-4a85ff7e2b49",
			"headers": "Authorization: {{auth}}\n",
			"url": "{{host}}/api/exchanges/%2f/some.name",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457641111968,
			"name": "Delete Exchange on vhost",
			"description": "A list of all exchanges.",
			"collectionId": "9ac62538-7225-598b-9d41-7f2813379977",
			"responses": [],
			"folder": "eda5579c-21f0-86b6-6f3e-0e7f976e2253",
			"collection_id": "9ac62538-7225-598b-9d41-7f2813379977"
		},
		{
			"id": "6717b6c2-5c47-20c8-bf3c-35f91bc51c42",
			"headers": "Authorization: {{auth}}\n",
			"url": "{{host}}/api/policies/vhost/name",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457641450204,
			"name": "Delete a policy",
			"description": "Delete a policy",
			"collectionId": "9ac62538-7225-598b-9d41-7f2813379977",
			"responses": [],
			"folder": "ed6c2b55-13f3-61d9-846f-6acbd456d71e",
			"collection_id": "9ac62538-7225-598b-9d41-7f2813379977"
		},
		{
			"id": "673a5c15-4743-9c5a-686e-41eec924b0a6",
			"headers": "Authorization: {{auth}}\n",
			"url": "{{host}}/api/vhosts/%2f/connections",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457640141472,
			"name": "Open vhost connections",
			"description": "A list of all open connections in a specific vhost.",
			"collectionId": "9ac62538-7225-598b-9d41-7f2813379977",
			"responses": [],
			"folder": "2a957492-2558-2c44-531c-52e8b6e9fffd",
			"collection_id": "9ac62538-7225-598b-9d41-7f2813379977"
		},
		{
			"id": "6d9ec10a-062b-2b18-443f-00de172ff8b3",
			"headers": "Authorization: {{auth}}\n",
			"url": "{{host}}/api/policies",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457641430062,
			"name": "Get all Policies",
			"description": "A list of all policies.",
			"collectionId": "9ac62538-7225-598b-9d41-7f2813379977",
			"responses": [],
			"folder": "ed6c2b55-13f3-61d9-846f-6acbd456d71e",
			"collection_id": "9ac62538-7225-598b-9d41-7f2813379977"
		},
		{
			"id": "7257df87-cbf4-efed-2a52-31005b1cf595",
			"headers": "Authorization: {{auth}}\n",
			"url": "{{host}}/api/permissions/%2f/broker",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457641377106,
			"name": "Get permission for user/vhost",
			"description": "An individual permission of a user and virtual host.",
			"collectionId": "9ac62538-7225-598b-9d41-7f2813379977",
			"responses": [],
			"folder": "7636f54a-6952-d1f6-42dc-5a9d07b89da0",
			"collection_id": "9ac62538-7225-598b-9d41-7f2813379977"
		},
		{
			"id": "73d11116-5b4a-e6b0-c0d3-4c683669d888",
			"headers": "Authorization: {{auth}}\n",
			"url": "{{host}}/api/parameters/component/vhost",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457641411468,
			"name": "List of all parameters/component on vhost",
			"description": "A list of all parameters for a given component and virtual host.",
			"collectionId": "9ac62538-7225-598b-9d41-7f2813379977",
			"responses": [],
			"collection_id": "9ac62538-7225-598b-9d41-7f2813379977"
		},
		{
			"id": "75f36c44-9681-815c-5c6f-67dde699d20d",
			"headers": "Authorization: {{auth}}\n",
			"url": "{{host}}/api/users/name/permissions",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457641341526,
			"name": "Get user permission",
			"description": "Get user permission",
			"collectionId": "9ac62538-7225-598b-9d41-7f2813379977",
			"responses": [],
			"folder": "7636f54a-6952-d1f6-42dc-5a9d07b89da0",
			"collection_id": "9ac62538-7225-598b-9d41-7f2813379977"
		},
		{
			"id": "7bfeb470-d93b-7ff8-8365-71c897011553",
			"headers": "Authorization: {{auth}}\n",
			"url": "{{host}}/api/definitions",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457639426854,
			"name": "Get Server Definitions",
			"description": "The server definitions - exchanges, queues, bindings, users, virtual hosts, permissions and parameters. Everything apart from messages. POST to upload an existing set of definitions.",
			"collectionId": "9ac62538-7225-598b-9d41-7f2813379977",
			"responses": [],
			"folder": "5526891f-b70b-0d81-10c4-f01530d1fd34",
			"collection_id": "9ac62538-7225-598b-9d41-7f2813379977"
		},
		{
			"id": "7c70aaee-6891-d855-5533-14a0c3615fc3",
			"headers": "Authorization: {{auth}}\n",
			"url": "{{host}}/api/vhosts/name",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457641328169,
			"name": "Delete vhost by name",
			"description": "Delete an individual virtual host.",
			"collectionId": "9ac62538-7225-598b-9d41-7f2813379977",
			"responses": [],
			"folder": "5526891f-b70b-0d81-10c4-f01530d1fd34",
			"collection_id": "9ac62538-7225-598b-9d41-7f2813379977"
		},
		{
			"id": "7cea4c1a-3223-f389-141e-2ed43b5db580",
			"headers": "Authorization: {{auth}}\n",
			"url": "{{host}}/api/nodes/rabbit@da3be74c053640fe92c6a39e2d7a5e46?memory=true&binary=true",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457639412744,
			"name": "Get Individual Node",
			"description": "An individual node in the RabbitMQ cluster. \n\nOptional Query Params</br>\n<strong>?memory=true</strong><br>\nto get memory statistics\n\n<strong>?binary=true</strong><br>\nto get a breakdown of binary memory use (may be expensive if there are many small binaries in the system).",
			"collectionId": "9ac62538-7225-598b-9d41-7f2813379977",
			"responses": [],
			"folder": "5526891f-b70b-0d81-10c4-f01530d1fd34",
			"collection_id": "9ac62538-7225-598b-9d41-7f2813379977"
		},
		{
			"id": "7e2d5f86-64b7-603e-d497-ff5f8bd97e61",
			"headers": "Authorization: {{auth}}\n",
			"url": "{{host}}/api/queues/%2f/queue-name",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457641153459,
			"name": "Get Individual Queue",
			"description": "An individual queue.",
			"collectionId": "9ac62538-7225-598b-9d41-7f2813379977",
			"responses": [],
			"folder": "08024882-01b1-67ed-e249-9a49c714657f",
			"collection_id": "9ac62538-7225-598b-9d41-7f2813379977"
		},
		{
			"id": "8256812d-f3a7-4745-777c-d0641032d7e5",
			"headers": "Authorization: {{auth}}\n",
			"url": "{{host}}/api/policies/vhost",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457641435354,
			"name": "Get all policies",
			"description": "A list of all policies in a given virtual host.",
			"collectionId": "9ac62538-7225-598b-9d41-7f2813379977",
			"responses": [],
			"folder": "ed6c2b55-13f3-61d9-846f-6acbd456d71e",
			"collection_id": "9ac62538-7225-598b-9d41-7f2813379977"
		},
		{
			"id": "83584709-1ea8-932c-9c39-2e0300652f97",
			"headers": "Authorization: {{auth}}\n",
			"url": "{{host}}/api/bindings",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457641261568,
			"name": "List of all bindings",
			"description": "A list of all bindings.",
			"collectionId": "9ac62538-7225-598b-9d41-7f2813379977",
			"responses": [],
			"collection_id": "9ac62538-7225-598b-9d41-7f2813379977"
		},
		{
			"id": "837786c3-ada1-86fd-b5ae-66ac793992bc",
			"headers": "Authorization: {{auth}}\n",
			"url": "{{host}}/api/consumers/%2f",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457641086599,
			"name": "Consumer Info on vhost",
			"description": "A list of all consumers on vhost.",
			"collectionId": "9ac62538-7225-598b-9d41-7f2813379977",
			"responses": [],
			"collection_id": "9ac62538-7225-598b-9d41-7f2813379977"
		},
		{
			"id": "84248844-a891-fefe-364f-ab1dc437b966",
			"headers": "Authorization: {{auth}}\nContent-Type: application/json\n",
			"url": "{{host}}/api/bindings/vhost/e/exchange/q/queue",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457641275832,
			"name": "Create Exchange/Queue Binding",
			"description": "Create a new binding, POST to this URI. You will need a body looking something like this:\n\n<blockquote>\n{<br>\n\"routing_key\":\"my_routing_key\",<br>\n\"arguments\":{}<br>\n}\n</blockquote>\n\nAll keys are optional. The response will contain a Location header telling you the URI of your new binding.",
			"collectionId": "9ac62538-7225-598b-9d41-7f2813379977",
			"responses": [],
			"rawModeData": "{\n\"routing_key\":\"my_routing_key\",\n\"arguments\":{}\n}",
			"collection_id": "9ac62538-7225-598b-9d41-7f2813379977"
		},
		{
			"id": "842ffa74-4146-08e8-e19f-64508cf90db2",
			"headers": "Authorization: {{auth}}\n",
			"url": "{{host}}/api/bindings/%2f",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457641265734,
			"name": "List of all vhost bindings",
			"description": "A list of all bindings in a given virtual host.",
			"collectionId": "9ac62538-7225-598b-9d41-7f2813379977",
			"responses": [],
			"collection_id": "9ac62538-7225-598b-9d41-7f2813379977"
		},
		{
			"id": "8c2c6be2-3ef9-a0fe-9eb9-cf3f9f0cf226",
			"headers": "Authorization: {{auth}}\n",
			"url": "{{host}}/api/policies/vhost/name",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457641439918,
			"name": "Get individual Policy",
			"description": "Get an individual policy.",
			"collectionId": "9ac62538-7225-598b-9d41-7f2813379977",
			"responses": [],
			"folder": "ed6c2b55-13f3-61d9-846f-6acbd456d71e",
			"collection_id": "9ac62538-7225-598b-9d41-7f2813379977"
		},
		{
			"id": "8c7134ce-3a6f-c2a5-d384-67bb7645d455",
			"headers": "Authorization: {{auth}}\n",
			"url": "{{host}}/api/parameters",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457641403450,
			"name": "A list of all parameters",
			"description": "A list of all parameters.",
			"collectionId": "9ac62538-7225-598b-9d41-7f2813379977",
			"responses": [],
			"collection_id": "9ac62538-7225-598b-9d41-7f2813379977"
		},
		{
			"id": "8ca26e25-0702-3f60-ecc9-a4d22f9ad3ad",
			"headers": "Authorization: {{auth}}\n",
			"url": "{{host}}/api/consumers",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457641070403,
			"name": "Consumer Info",
			"description": "A list of all consumers.",
			"collectionId": "9ac62538-7225-598b-9d41-7f2813379977",
			"responses": [],
			"collection_id": "9ac62538-7225-598b-9d41-7f2813379977"
		},
		{
			"id": "8f8c2780-b9bf-9cc3-95aa-ea5482e786c3",
			"headers": "Authorization: {{auth}}\n",
			"url": "{{host}}/api/vhosts",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457641313912,
			"name": "Get List of vhost",
			"description": "A list of all vhosts.",
			"collectionId": "9ac62538-7225-598b-9d41-7f2813379977",
			"responses": [],
			"folder": "5526891f-b70b-0d81-10c4-f01530d1fd34",
			"collection_id": "9ac62538-7225-598b-9d41-7f2813379977"
		},
		{
			"id": "94588485-8795-9cdc-ce1e-922df009fe1b",
			"headers": "Authorization: {{auth}}\n",
			"url": "{{host}}/api/bindings/vhost/e/source/e/destination/props",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457641307710,
			"name": "/api/bindings/vhost/e/source/e/destination/props",
			"description": "A list of all bindings between two exchanges. Similar to the list of all bindings between an exchange and a queue, above.",
			"collectionId": "9ac62538-7225-598b-9d41-7f2813379977",
			"responses": [],
			"collection_id": "9ac62538-7225-598b-9d41-7f2813379977"
		},
		{
			"id": "94ba05a7-0721-f046-0db2-e8d2e090e063",
			"headers": "Authorization: {{auth}}\n",
			"url": "{{host}}/api/users/name",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457641360566,
			"name": "Delete user by name",
			"description": "Delete user by name",
			"collectionId": "9ac62538-7225-598b-9d41-7f2813379977",
			"responses": [],
			"folder": "7636f54a-6952-d1f6-42dc-5a9d07b89da0",
			"collection_id": "9ac62538-7225-598b-9d41-7f2813379977"
		},
		{
			"id": "9fe97db7-9bd0-b6f5-6547-fddb2435a21f",
			"headers": "Authorization: {{auth}}\n",
			"url": "{{host}}/api/bindings/vhost/e/source/e/destination",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457641291948,
			"name": "Get individual exchange/exchange binding Advance",
			"description": "Get individual binding between an exchange and a queue. \n\nThe props part of the URI is a \"name\" for the binding composed of its routing key and a hash of its arguments.",
			"collectionId": "9ac62538-7225-598b-9d41-7f2813379977",
			"responses": [],
			"collection_id": "9ac62538-7225-598b-9d41-7f2813379977"
		},
		{
			"id": "a08f0f10-fc67-c54e-8e56-aeb411ca6ead",
			"headers": "Authorization: {{auth}}\n",
			"url": "{{host}}/api/queues/%2f/queue-name/contents",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457641243560,
			"name": "Delete queue contents",
			"description": "Delete queue contents ",
			"collectionId": "9ac62538-7225-598b-9d41-7f2813379977",
			"responses": [],
			"folder": "08024882-01b1-67ed-e249-9a49c714657f",
			"collection_id": "9ac62538-7225-598b-9d41-7f2813379977"
		},
		{
			"id": "a1dca2f9-19eb-cb58-4700-d31428634bf6",
			"headers": "Authorization: {{auth}}\n",
			"url": "{{host}}/api/connections/name",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457640149831,
			"name": "Get Individual connection",
			"description": "An individual connection.",
			"collectionId": "9ac62538-7225-598b-9d41-7f2813379977",
			"responses": [],
			"folder": "2a957492-2558-2c44-531c-52e8b6e9fffd",
			"collection_id": "9ac62538-7225-598b-9d41-7f2813379977"
		},
		{
			"id": "a7c1ab78-d0a0-7af9-6bbb-4b18dc4f7448",
			"headers": "Authorization: {{auth}}\n",
			"url": "{{host}}/api/channels/channel",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457641063030,
			"name": "Channel Info",
			"description": "Details about an individual channel.",
			"collectionId": "9ac62538-7225-598b-9d41-7f2813379977",
			"responses": [],
			"folder": "c0e954ed-81c4-5f01-059f-b36cb16b562b",
			"collection_id": "9ac62538-7225-598b-9d41-7f2813379977"
		},
		{
			"id": "b1ad076d-7474-c440-4f15-349c7d266e2b",
			"headers": "Authorization: {{auth}}\n",
			"url": "{{host}}/api/permissions",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457641372707,
			"name": "Get List of all users/permissions",
			"description": "A list of all permissions for all users.",
			"collectionId": "9ac62538-7225-598b-9d41-7f2813379977",
			"responses": [],
			"folder": "7636f54a-6952-d1f6-42dc-5a9d07b89da0",
			"collection_id": "9ac62538-7225-598b-9d41-7f2813379977"
		},
		{
			"id": "bc739a79-3fd8-a077-495c-f85e5dd14ba5",
			"headers": "Authorization: {{auth}}\n",
			"url": "{{host}}/api/permissions/vhost/user",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457641399156,
			"name": "Delete user on vhost",
			"description": "Delete user on vhost",
			"collectionId": "9ac62538-7225-598b-9d41-7f2813379977",
			"responses": [],
			"folder": "7636f54a-6952-d1f6-42dc-5a9d07b89da0",
			"collection_id": "9ac62538-7225-598b-9d41-7f2813379977"
		},
		{
			"id": "c2a30aac-1489-8463-fc79-555d710e8f3b",
			"headers": "Authorization: {{auth}}\n",
			"url": "{{host}}/api/queues",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457641144224,
			"name": "Get List of All Queues",
			"description": "A list of all queues.",
			"collectionId": "9ac62538-7225-598b-9d41-7f2813379977",
			"responses": [],
			"folder": "08024882-01b1-67ed-e249-9a49c714657f",
			"collection_id": "9ac62538-7225-598b-9d41-7f2813379977"
		},
		{
			"id": "c3c382f3-806b-b25d-8a15-553239b61094",
			"headers": "Authorization: {{auth}}\n",
			"url": "{{host}}/api/exchanges/%2f/amq.direct/bindings/source",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457641116666,
			"name": "List All Bindings in exchange is source",
			"description": "A list of all bindings in which a given exchange is the source.",
			"collectionId": "9ac62538-7225-598b-9d41-7f2813379977",
			"responses": [],
			"folder": "eda5579c-21f0-86b6-6f3e-0e7f976e2253",
			"collection_id": "9ac62538-7225-598b-9d41-7f2813379977"
		},
		{
			"id": "c571eabd-6c4f-e41d-b46c-a64dc43ccadd",
			"headers": "Authorization: {{auth}}\nContent-Type: application/json\n",
			"url": "{{host}}/api/cluster-name",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457639398498,
			"name": "Set Cluster Name",
			"description": "Set the name identifying this RabbitMQ cluster.\n\nLook at the JSON payload in the request body.",
			"collectionId": "9ac62538-7225-598b-9d41-7f2813379977",
			"responses": [],
			"folder": "5526891f-b70b-0d81-10c4-f01530d1fd34",
			"rawModeData": "{\n  \"name\": \"rabbit@localhost\"\n}",
			"collection_id": "9ac62538-7225-598b-9d41-7f2813379977"
		},
		{
			"id": "cfac2183-267b-c85c-27d3-f1fb138182f0",
			"headers": "Authorization: {{auth}}\n",
			"url": "{{host}}/api/queues/%2f/hello/bindings",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457641238659,
			"name": "List all queue bindings",
			"description": "A list of all bindings on a given queue.",
			"collectionId": "9ac62538-7225-598b-9d41-7f2813379977",
			"responses": [],
			"folder": "08024882-01b1-67ed-e249-9a49c714657f",
			"collection_id": "9ac62538-7225-598b-9d41-7f2813379977"
		},
		{
			"id": "d44047ad-f969-833d-957f-76d4c471fc0c",
			"headers": "Authorization: {{auth}}\nContent-Type: application/json\n",
			"url": "{{host}}/api/policies/vhost/name",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457641444844,
			"name": "Create a policy",
			"description": "To create a policy, you will need a body looking something like this:\n\n<blockquote>\n{<br>\n\"pattern\":\"^amq.\",<br>\n\"definition\": {<br>\n     \"federation-upstream-set\":\"all\"<br>\n}, <br>\n\"priority\":0, <br>\n\"apply-to\": \"all\"<br>\n}\n<blockquote>\npattern and definition are mandatory, priority and apply-to are optional.",
			"collectionId": "9ac62538-7225-598b-9d41-7f2813379977",
			"responses": [],
			"folder": "ed6c2b55-13f3-61d9-846f-6acbd456d71e",
			"rawModeData": " {\n\"pattern\":\"^amq.\",\n\"definition\": {\n\"federation-upstream-set\":\"all\"\n}, \n\"priority\":0, \n\"apply-to\": \"all\"\n}",
			"collection_id": "9ac62538-7225-598b-9d41-7f2813379977"
		},
		{
			"id": "e4d142e3-828d-048c-183f-68a2fbb87c3e",
			"headers": "Authorization: {{auth}}\n",
			"url": "{{host}}/api/connections/name/channels",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457640163172,
			"name": "List Channels on Connection",
			"description": "List of all channels for a given connection.",
			"collectionId": "9ac62538-7225-598b-9d41-7f2813379977",
			"responses": [],
			"folder": "c0e954ed-81c4-5f01-059f-b36cb16b562b",
			"collection_id": "9ac62538-7225-598b-9d41-7f2813379977"
		},
		{
			"id": "e5d660ef-f75e-daf1-5aaf-3b4f7184c071",
			"headers": "Authorization: {{auth}}\n",
			"url": "{{host}}/api/bindings/vhost/e/exchange/q/queue/props",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457641281519,
			"name": "Get individual exchange/queue binding",
			"description": "An individual binding between an exchange and a queue. The props part of the URI is a \"name\" for the binding composed of its routing key and a hash of its arguments.",
			"collectionId": "9ac62538-7225-598b-9d41-7f2813379977",
			"responses": [],
			"collection_id": "9ac62538-7225-598b-9d41-7f2813379977"
		},
		{
			"id": "e7a04749-87bb-9852-f5b4-917f1a53bfd3",
			"headers": "Authorization: {{auth}}\nContent-Type: application/json\n",
			"url": "{{host}}/api/exchanges/%2f/some.name",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457641107376,
			"name": "Create Exchange on vhost",
			"description": "Create exchange on vhost",
			"collectionId": "9ac62538-7225-598b-9d41-7f2813379977",
			"responses": [],
			"folder": "eda5579c-21f0-86b6-6f3e-0e7f976e2253",
			"rawModeData": "{\n    \"type\":\"direct\",\n    \"auto_delete\":false,\n    \"durable\":true,\n    \"internal\":false,\n    \"arguments\":{}\n}",
			"collection_id": "9ac62538-7225-598b-9d41-7f2813379977"
		},
		{
			"id": "eb181808-12a7-0976-0d60-b1df5be05c29",
			"headers": "Authorization: {{auth}}\nContent-Type: application/json\n",
			"url": "{{host}}/api/users/name",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457641351685,
			"name": "Create a user",
			"description": "To create a user, you will need a body looking something like this:\n\n<blockquote>\n{\"password\":\"secret\",\"tags\":\"administrator\"}\n</blockquote>\nor:\n<blockquote>\n{<br>\n\"password_hash\":\"2lmoth8l4H0DViLaK9Fxi6l9ds8=\",<br>\n\"tags\":\"administrator\"<br>\n}\n\nThe tags key is mandatory. Either <strong>password</strong> or <strong>password_hash</strong> must be set. Setting password_hash to \"\" will ensure the user cannot use a password to log in. tags is a comma-separated list of tags for the user. Currently recognised tags are \"administrator\", \"monitoring\" and \"management\".",
			"collectionId": "9ac62538-7225-598b-9d41-7f2813379977",
			"responses": [],
			"folder": "7636f54a-6952-d1f6-42dc-5a9d07b89da0",
			"rawModeData": "{\n\"password\":\"secret\",\n\"tags\":\"administrator\"\n}",
			"collection_id": "9ac62538-7225-598b-9d41-7f2813379977"
		},
		{
			"id": "ef6b0f52-5efb-74ed-0526-ba04364507bd",
			"headers": "Authorization: {{auth}}\n",
			"url": "{{host}}/api/aliveness-test/%2f",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457641460885,
			"name": "Declare test queue",
			"description": "Declares a test queue, then publishes and consumes a message. Intended for use by monitoring tools. If everything is working correctly, will return HTTP status 200 with body:\n\n<blockquote>\n{\"status\":\"ok\"}\n</blockquote>\nNote: the test queue will not be deleted (to to prevent queue churn if this is repeatedly pinged).",
			"collectionId": "9ac62538-7225-598b-9d41-7f2813379977",
			"responses": [],
			"collection_id": "9ac62538-7225-598b-9d41-7f2813379977"
		},
		{
			"id": "f243f814-418e-a805-80e9-8fc3f869cd8d",
			"headers": "Authorization: {{auth}}\nContent-Type: application/json\n",
			"url": "{{host}}/api/queues/%2f/queue-name",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457641159680,
			"name": "Create a Queue",
			"description": "To create a queue, you will need a body looking something like this:\n\n<blockquote>\n{<br>\n\"auto_delete\":false,<br>\n\"durable\":true,<br>\n\"arguments\":{},<br>\n\"node\":\"rabbit@smacmullen\"<br>\n}\n</blockquote>\n\nAll keys are optional.",
			"collectionId": "9ac62538-7225-598b-9d41-7f2813379977",
			"responses": [],
			"folder": "08024882-01b1-67ed-e249-9a49c714657f",
			"rawModeData": "{\n\"auto_delete\":false,\n\"durable\":true,\n\"arguments\":{},\n\"node\":\"rabbit@localhost\"\n}",
			"collection_id": "9ac62538-7225-598b-9d41-7f2813379977"
		},
		{
			"id": "fa0557b8-99c2-4b95-849d-4eb20c38892c",
			"headers": "Authorization: {{auth}}\n",
			"url": "{{host}}/api/users",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457641337343,
			"name": "Get list of all users",
			"description": "Get list of all users",
			"collectionId": "9ac62538-7225-598b-9d41-7f2813379977",
			"responses": [],
			"folder": "7636f54a-6952-d1f6-42dc-5a9d07b89da0",
			"collection_id": "9ac62538-7225-598b-9d41-7f2813379977"
		},
		{
			"id": "faee8e98-e068-1a05-e4d1-183b3e9679f7",
			"headers": "Authorization: {{auth}}\n",
			"url": "{{host}}/api/parameters/component/vhost/name",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457641425823,
			"name": "Delete Parameter on vhost",
			"description": "Delete Parameter on vhost",
			"collectionId": "9ac62538-7225-598b-9d41-7f2813379977",
			"responses": [],
			"folder": "5526891f-b70b-0d81-10c4-f01530d1fd34",
			"collection_id": "9ac62538-7225-598b-9d41-7f2813379977"
		},
		{
			"id": "fe6e697c-8e0d-159d-f99f-77f8be4fc5fe",
			"headers": "Authorization: {{auth}}\n",
			"url": "{{host}}/api/overview",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457641989843,
			"name": "Get Overview",
			"description": "Various random bits of information that describe the whole system.",
			"collectionId": "9ac62538-7225-598b-9d41-7f2813379977",
			"responses": [],
			"folder": "5526891f-b70b-0d81-10c4-f01530d1fd34",
			"collection_id": "9ac62538-7225-598b-9d41-7f2813379977"
		}
	]
}